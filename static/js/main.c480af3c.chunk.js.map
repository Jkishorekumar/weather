{"version":3,"sources":["components/Time.js","components/CityComponent.js","components/WeatherInfoComponent.js","components/WeatherComponent.js","App.js","index.js"],"names":["d","Date","month","Array","mon","getMonth","weekday","day","getDay","displaytime","getDate","getFullYear","getHours","getMinutes","Citycomponent","location","setlocation","fetchweather","className","src","alt","onSubmit","type","value","onChange","e","target","placeholder","infoicons","Cloudy","Humidity","Wind","Pressure","Sunrise","Sunset","WeatherInfoComponent","name","unit","width","height","weathericons","WeatherComponent","isday","weather","icon","includes","gettime","timestamp","Math","floor","main","temp","description","sys","country","clouds","all","humidity","wind","speed","pressure","style","sunrise","sunset","App","useState","condition","setcondition","preventDefault","axios","get","then","response","data","CityComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c480af3c.chunk.js","sourcesContent":["var d = new Date();\r\n\r\nvar month = new Array(12);\r\nmonth[0] = \"Jan\";\r\nmonth[1] = \"Feb\";\r\nmonth[2] = \"Mar\";\r\nmonth[3] = \"Apr\";\r\nmonth[4] = \"May\";\r\nmonth[5] = \"Jun\";\r\nmonth[6] = \"Jul\";\r\nmonth[7] = \"Aug\";\r\nmonth[8] = \"Sept\";\r\nmonth[9] = \"Oct\";\r\nmonth[10] = \"Nov\";\r\nmonth[11] = \"Dec\";\r\nvar mon = month[d.getMonth()];\r\n\r\nvar weekday = new Array(7);\r\nweekday[0] = \"Sun\";\r\nweekday[1] = \"Mon\";\r\nweekday[2] = \"Tue\";\r\nweekday[3] = \"Wed\";\r\nweekday[4] = \"Thur\";\r\nweekday[5] = \"Fri\";\r\nweekday[6] = \"Sat\";\r\nvar day = weekday[d.getDay()];\r\n\r\nexport const displaytime = `${day} , ${mon} ${d.getDate()} ${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`\r\n","import React from 'react'\r\nimport '../css/citycomponent.css'\r\nimport { displaytime } from './Time'\r\n\r\nfunction Citycomponent({location , setlocation , fetchweather}) {\r\n    \r\n    return (\r\n        <>\r\n            <div className='weather'>Current Weather Report</div>\r\n            <p className=\"timing\">{displaytime}</p>\r\n            <img className=\"image\" src=\"Icons/day.svg\" alt=\"weather-icon\"></img>\r\n            <h4 className='hint'>Finding Out Weather Conditions Of Your City</h4>\r\n            \r\n            <form className='search' onSubmit={fetchweather}>\r\n                <input type='text' value={location} onChange={e => setlocation(e.target.value)} placeholder=\"Search Location\"></input>\r\n                <button type='submit'>Search</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Citycomponent","import React from 'react'\r\nimport '../css/weatherinfocomponent.css'\r\n\r\nconst infoicons = {\r\n    Cloudy: \"Icons/cloudy.svg\",\r\n    Humidity : \"Icons/humidity.svg\",\r\n    Wind : \"Icons/wind.svg\",\r\n    Pressure : \"Icons/pressure.svg\",\r\n    Sunrise : \"Icons/sunny.svg\",\r\n    Sunset : \"Icons/night.svg\"\r\n}\r\n\r\nfunction WeatherInfoComponent({name , value , unit}) {\r\n    return (\r\n        <div className=\"infocontainer\">\r\n          <img src={infoicons[name]} alt=\"icon\" width=\"36px\" height=\"36px\" ></img>\r\n          <div className={`infolabel ${name}`}>\r\n              <span>{name}</span>   \r\n              {value} {unit}     \r\n          </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherInfoComponent","import React from 'react'\r\nimport \"../css/weathercomponent.css\"\r\nimport WeatherInfoComponent from './WeatherInfoComponent'\r\nimport { displaytime } from './Time'\r\n\r\nconst weathericons = {\r\n    \"01d\" : \"Icons/sunny.svg\",\r\n    \"01n\" : \"Icons/night.svg\",\r\n    \"02d\" : \"Icons/cloudy.svg\",\r\n    \"02n\" : \"Icons/cloudy-night.svg\",\r\n    \"03d\" : \"Icons/scattered-day-clouds.svg\",\r\n    \"03n\" : \"Icons/scattered-night-cloud.svg\",\r\n    \"04d\" : \"Icons/cloudy.svg\",\r\n    \"04n\" : \"Icons/cloudy-night.svg\",\r\n    \"09d\" : \"Icons/rain.svg\",\r\n    \"09n\" : \"Icons/rain-night.svg\",\r\n    \"10d\" : \"Icons/rain.svg\",\r\n    \"10n\" : \"Icons/rain-night.svg\",\r\n    \"11d\" : \"Icons/storm.svg\",\r\n    \"11n\" : \"Icons/storm.svg\",\r\n    \"13d\" : \"Icons/snow.svg\",\r\n    \"13n\" : \"Icons/snow.svg\",\r\n    \"50d\" : \"Icons/mist.svg\",\r\n    \"50n\" : \"Icons/mist.svg\"\r\n}\r\n\r\nfunction WeatherComponent({value , setlocation , fetchweather}) {\r\n\r\n    const isday = value.weather[0].icon.includes(\"d\")\r\n    const gettime = (timestamp) => `${new Date(timestamp * 1000).getHours()} : ${new Date(timestamp * 1000).getMinutes()}`\r\n\r\n    return (\r\n        <>\r\n            <div className=\"weathercondition\">\r\n                <p className=\"condition\">\r\n                    <span>{Math.floor(value.main.temp - 273)}&deg;c</span>\r\n                    {` | ${value.weather[0].description} `}\r\n                </p>\r\n                <img className=\"img\" src={weathericons[value.weather[0].icon]} alt='icon'></img>\r\n            </div>\r\n\r\n            <form className='insearch' onSubmit={fetchweather}>\r\n                <button type='submit'>Search</button>\r\n                <input type='text' onChange={e => setlocation(e.target.value)} placeholder=\"Search Another Location\"></input>\r\n            </form>\r\n\r\n            <div className=\"Location\">{ `${value.name} , ${value.sys.country}` }</div>\r\n\r\n            <p className='time'>{displaytime}</p>\r\n\r\n            <div className=\"weatherinfolabel\">Weather Information</div>\r\n\r\n            <div className='weatherinfocontainer'>\r\n                <WeatherInfoComponent name=\"Cloudy\" unit=\"%\" value={value.clouds.all}/>\r\n                <WeatherInfoComponent name=\"Humidity\" unit=\"%\" value={value.main.humidity}/>\r\n                <WeatherInfoComponent name=\"Wind\" unit=\"km/h\" value={value.wind.speed}/>\r\n                <WeatherInfoComponent name=\"Pressure\" unit=\"mb\" value={value.main.pressure}/>\r\n            </div>\r\n            \r\n            <hr style={{width: \"60%\"}}></hr>\r\n\r\n            <div>\r\n                <WeatherInfoComponent \r\n                    name={isday ? \"Sunset\" : \"Sunrise\"} \r\n                    value={isday ? gettime(value.sys.sunrise) : gettime(value.sys.sunset)}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherComponent","import React,{useState} from 'react'\nimport axios from 'axios'\nimport CityComponent from \"./components/CityComponent\"\nimport WeatherComponent from \"./components/WeatherComponent\"\nimport \"./css/App.css\"\n\nconst API_KEY = \"954c669697027fdbd1c4800524587bb9\"\n\nfunction App() {\n  const [location, setlocation] = useState('')\n  const [condition, setcondition] = useState()\n\n  const fetchweather = (e) => {\n        e.preventDefault()\n        axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`)\n          .then(response => {setcondition(response.data)} )\n  }\n  return (\n    <div className='container'>\n      \n      { condition ? \n          (<WeatherComponent value={condition} setlocation={setlocation} fetchweather={fetchweather}/>) :\n          (<CityComponent location={location} setlocation={setlocation} fetchweather={fetchweather}/>)\n      }\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}